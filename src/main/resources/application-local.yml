spring:
  datasource:
    url: ${DATABASE_URL}
    username: ${DATABASE_USERNAME}
    password: ${DATABASE_PASSWORD}
    driver-class-name: com.mysql.cj.jdbc.Driver
  jpa:
    show-sql: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.MySQLDialect
    hibernate:
      ddl-auto: update
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
  kafka:
    bootstrap-servers: ${KAFKA_BOOTSTRAP_SERVERS}
    producer:
      retries: ${KAFKA_PRODUCER_RETRIES}
      acks: ${KAFKA_PRODUCER_ACKS}
      properties:
        enable.idempotence: ${KAFKA_PRODUCER_ENABLE_IDEMPOTENCE}
        max.in.flight.requests.per.connection: ${KAFKA_PRODUCER_MAX_IN_FLIGHT_REQUESTS_PER_CONNECTION}
    consumer:
      group-id: ${KAFKA_CONSUMER_GROUP_ID}
      auto-offset-reset: ${KAFKA_CONSUMER_AUTO_OFFSET_RESET}
      enable-auto-commit: ${KAFKA_CONSUMER_ENABLE_AUTO_COMMIT}
    admin:
      properties:
        client.id: ${KAFKA_ADMIN_CLIENT_ID}
    mongodb:
      uri: ${MONGODB_URI}

logging:
  level:
    org.springframework.messaging: debug
    org.springframework.web.socket: debug

gachtaxi:
  auth:
    kakao:
      client: ${KAKAO_CLIENT_API_KEY}
      redirect: ${KAKAO_REDIRECT_URL}
      token_uri: ${KAKAO_TOKEN_URI}
      user_profile: ${KAKAO_USER_PROFILE}
    jwt:
      key: ${JWT_SECRET_KEY}
      accessTokenExpiration: ${JWT_ACCESS_TOKEN_EXPIRATION}
      refreshTokenExpiration: ${JWT_REFRESH_TOKEN_EXPIRATION}
      tmpAccessTokenExpiration: ${JWT_TMP_ACCESS_TOKEN_EXPIRATION}
      cookieMaxAge: ${JWT_COOKIE_MAX_AGE}
      secureOption: ${COOKIE_SECURE_OPTION}
      cookiePathOption: ${COOKIE_PATH_OPTION}
    redis:
      emailAuthCodeExpiration: ${REDIS_EMAIL_AUTH_CODE_EXPIRATION}
  kafka:
    topics:
      match-room-created: ${KAFKA_TOPIC_MATCH_ROOM_CREATED}
      match-member-joined: ${KAFKA_TOPIC_MATCH_MEMBER_JOINED}
      match-member-cancelled: ${KAFKA_TOPIC_MATCH_MEMBER_CANCELLED}
      match-room-cancelled: ${KAFKA_TOPIC_MATCH_ROOM_CANCELLED}
      match-room-completed: ${KAFKA_TOPIC_MATCH_ROOM_COMPLETED}
    partition-count: ${KAFKA_PARTITION_COUNT}
    replication-factor: ${KAFKA_REPLICATION_FACTOR}
  matching:
    auto-matching-max-capacity: ${AUTO_MATCHING_MAX_CAPACITY}
    auto-matching-description: ${AUTO_MATCHING_DESCRIPTION}
